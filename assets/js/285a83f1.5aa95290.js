"use strict";(self.webpackChunkfreewili_docs=self.webpackChunkfreewili_docs||[]).push([[9063],{7943:(t,e,s)=>{s.r(e),s.d(e,{assets:()=>o,contentTitle:()=>d,default:()=>a,frontMatter:()=>i,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"gui-screen-buttons-and-lights/color-display-widgets","title":"FREE-WILi Color Display Widgets - API and Control Properties","description":"Configure FREE-WILi color display widgets using the API. Includes details on LED, images, log lists, plots, buttons, and control properties and data.","source":"@site/docs/gui-screen-buttons-and-lights/color-display-widgets.md","sourceDirName":"gui-screen-buttons-and-lights","slug":"/gui-screen-buttons-and-lights/color-display-widgets","permalink":"/gui-screen-buttons-and-lights/color-display-widgets","draft":false,"unlisted":false,"editUrl":"https://github.com/freewili/FreeWili_WebDocs/blob/main/docs/gui-screen-buttons-and-lights/color-display-widgets.md","tags":[],"version":"current","lastUpdatedAt":1754053359000,"sidebarPosition":1,"frontMatter":{"title":"FREE-WILi Color Display Widgets - API and Control Properties","description":"Configure FREE-WILi color display widgets using the API. Includes details on LED, images, log lists, plots, buttons, and control properties and data.","keywords":["FREE-WILi","color display widgets","API","LED","image widget","log list","plot","text control","number control","bargraph","button","control properties","control data"],"sidebar_position":1,"sidebar_label":"Color Display Widgets"},"sidebar":"tutorialSidebar","previous":{"title":"GUI : Screen, Buttons, and Lights","permalink":"/gui-screen-buttons-and-lights/"},"next":{"title":"Making sounds","permalink":"/gui-screen-buttons-and-lights/making-sounds"}}');var l=s(4848),r=s(8453);const i={title:"FREE-WILi Color Display Widgets - API and Control Properties",description:"Configure FREE-WILi color display widgets using the API. Includes details on LED, images, log lists, plots, buttons, and control properties and data.",keywords:["FREE-WILi","color display widgets","API","LED","image widget","log list","plot","text control","number control","bargraph","button","control properties","control data"],sidebar_position:1,sidebar_label:"Color Display Widgets"},d="Color Display Widgets",o={},c=[{value:"Properties for Controls",id:"properties-for-controls",level:2},{value:"Data for the Controls",id:"data-for-the-controls",level:2}];function x(t){const e={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...t.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(e.header,{children:(0,l.jsx)(e.h1,{id:"color-display-widgets",children:"Color Display Widgets"})}),"\n",(0,l.jsx)(e.p,{children:"The color display allows you to display data using GUI widgets on panels. The are configured using the API. The table below lists the widgets and their API.  There is a limit of 24 controls across the 8 panels."}),"\n",(0,l.jsx)(e.p,{children:"All the controls have properties and data which you can manipulate at run-time."}),"\n",(0,l.jsxs)(e.table,{children:[(0,l.jsx)(e.thead,{children:(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.th,{style:{textAlign:"center"},children:(0,l.jsx)(e.strong,{children:"Widget"})}),(0,l.jsx)(e.th,{style:{textAlign:"center"},children:(0,l.jsx)(e.strong,{children:"API"})}),(0,l.jsx)(e.th,{style:{textAlign:"center"},children:(0,l.jsx)(e.strong,{children:"Notes"})})]})}),(0,l.jsxs)(e.tbody,{children:[(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.td,{style:{textAlign:"center"},children:"LED"}),(0,l.jsx)(e.td,{style:{textAlign:"center"},children:"addControlLED"}),(0,l.jsx)(e.td,{style:{textAlign:"center"}})]}),(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.td,{style:{textAlign:"center"},children:"ImageFromRom"}),(0,l.jsx)(e.td,{style:{textAlign:"center"},children:"addControlPicture"}),(0,l.jsx)(e.td,{style:{textAlign:"center"}})]}),(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.td,{style:{textAlign:"center"},children:"ImageFromFile"}),(0,l.jsx)(e.td,{style:{textAlign:"center"},children:"addControlPictureFromFile"}),(0,l.jsx)(e.td,{style:{textAlign:"center"}})]}),(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.td,{style:{textAlign:"center"},children:"LogList"}),(0,l.jsx)(e.td,{style:{textAlign:"center"},children:"addControlLogList"}),(0,l.jsx)(e.td,{style:{textAlign:"center"}})]}),(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.td,{style:{textAlign:"center"},children:"Plot"}),(0,l.jsx)(e.td,{style:{textAlign:"center"},children:"addControlPlot"}),(0,l.jsx)(e.td,{style:{textAlign:"center"}})]}),(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.td,{style:{textAlign:"center"},children:"Text"}),(0,l.jsx)(e.td,{style:{textAlign:"center"},children:"addControlText"}),(0,l.jsx)(e.td,{style:{textAlign:"center"}})]}),(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.td,{style:{textAlign:"center"},children:"Number"}),(0,l.jsx)(e.td,{style:{textAlign:"center"},children:"addControlNumber"}),(0,l.jsx)(e.td,{style:{textAlign:"center"}})]}),(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.td,{style:{textAlign:"center"},children:"Bargraph"}),(0,l.jsx)(e.td,{style:{textAlign:"center"},children:"addControlBargraph"}),(0,l.jsx)(e.td,{style:{textAlign:"center"}})]}),(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.td,{style:{textAlign:"center"},children:"Button"}),(0,l.jsx)(e.td,{style:{textAlign:"center"},children:"addControlButton"}),(0,l.jsx)(e.td,{style:{textAlign:"center"}})]})]})]}),"\n",(0,l.jsx)(e.h2,{id:"properties-for-controls",children:"Properties for Controls"}),"\n",(0,l.jsx)(e.p,{children:"The table below lists the APIs properties for the controls"}),"\n",(0,l.jsxs)(e.table,{children:[(0,l.jsx)(e.thead,{children:(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.th,{style:{textAlign:"center"},children:(0,l.jsx)(e.strong,{children:"API"})}),(0,l.jsx)(e.th,{style:{textAlign:"center"},children:(0,l.jsx)(e.strong,{children:"Description"})}),(0,l.jsx)(e.th,{style:{textAlign:"center"}})]})}),(0,l.jsxs)(e.tbody,{children:[(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.td,{style:{textAlign:"center"},children:"setControlValueMinMax"}),(0,l.jsx)(e.td,{style:{textAlign:"center"},children:"sets min max property of control in int32"}),(0,l.jsx)(e.td,{style:{textAlign:"center"}})]}),(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.td,{style:{textAlign:"center"},children:"setControlValueMinMaxF"}),(0,l.jsx)(e.td,{style:{textAlign:"center"},children:"sets min max property of control in float32"}),(0,l.jsx)(e.td,{style:{textAlign:"center"}})]}),(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.td,{style:{textAlign:"center"},children:(0,l.jsx)(e.code,{children:"setControlProperty"})}),(0,l.jsx)(e.td,{style:{textAlign:"center"},children:"Sets the a property of a control."}),(0,l.jsx)(e.td,{style:{textAlign:"center"},children:"Not in wasm yet"})]}),(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.td,{style:{textAlign:"center"},children:"setPlotData"}),(0,l.jsx)(e.td,{style:{textAlign:"center"},children:"Sets color of plot"}),(0,l.jsx)(e.td,{style:{textAlign:"center"},children:"Not implemented in wasm yet. Sets colors of plots"})]})]})]}),"\n",(0,l.jsx)(e.h2,{id:"data-for-the-controls",children:"Data for the Controls"}),"\n",(0,l.jsx)(e.p,{children:"The table below lists the APIs for the data in the control."}),"\n",(0,l.jsxs)(e.table,{children:[(0,l.jsx)(e.thead,{children:(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.th,{style:{textAlign:"center"},children:(0,l.jsx)(e.strong,{children:"API"})}),(0,l.jsx)(e.th,{style:{textAlign:"center"},children:(0,l.jsx)(e.strong,{children:"Description"})}),(0,l.jsx)(e.th,{style:{textAlign:"center"},children:(0,l.jsx)(e.strong,{children:"Notes"})})]})}),(0,l.jsxs)(e.tbody,{children:[(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.td,{style:{textAlign:"center"},children:"setListItemText"}),(0,l.jsx)(e.td,{style:{textAlign:"center"},children:"sets a log text when implementing list mode"}),(0,l.jsx)(e.td,{style:{textAlign:"center"},children:"Make sure to have a valid list index"})]}),(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.td,{style:{textAlign:"center"},children:"setListItemSelected"}),(0,l.jsx)(e.td,{style:{textAlign:"center"},children:"sets the selected item in the list"}),(0,l.jsx)(e.td,{style:{textAlign:"center"}})]}),(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.td,{style:{textAlign:"center"},children:"setListItemTopIndex"}),(0,l.jsx)(e.td,{style:{textAlign:"center"},children:"set the top item in the list"}),(0,l.jsx)(e.td,{style:{textAlign:"center"}})]}),(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.td,{style:{textAlign:"center"},children:"clearLogOrPlotData"}),(0,l.jsx)(e.td,{style:{textAlign:"center"},children:"clears a log or plot buffer"}),(0,l.jsx)(e.td,{style:{textAlign:"center"}})]}),(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.td,{style:{textAlign:"center"},children:"addControlPlotData"}),(0,l.jsx)(e.td,{style:{textAlign:"center"},children:"adds data to a plot buffer"}),(0,l.jsx)(e.td,{style:{textAlign:"center"}})]}),(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.td,{style:{textAlign:"center"},children:"setLogDataText"}),(0,l.jsx)(e.td,{style:{textAlign:"center"},children:"adds test to the list"}),(0,l.jsx)(e.td,{style:{textAlign:"center"}})]}),(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.td,{style:{textAlign:"center"},children:"setControlValue"}),(0,l.jsx)(e.td,{style:{textAlign:"center"},children:"sets the value of the control in int32"}),(0,l.jsx)(e.td,{style:{textAlign:"center"}})]}),(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.td,{style:{textAlign:"center"},children:"setControlValueFloat"}),(0,l.jsx)(e.td,{style:{textAlign:"center"},children:"sets the value of teh control in float32"}),(0,l.jsx)(e.td,{style:{textAlign:"center"}})]})]})]})]})}function a(t={}){const{wrapper:e}={...(0,r.R)(),...t.components};return e?(0,l.jsx)(e,{...t,children:(0,l.jsx)(x,{...t})}):x(t)}},8453:(t,e,s)=>{s.d(e,{R:()=>i,x:()=>d});var n=s(6540);const l={},r=n.createContext(l);function i(t){const e=n.useContext(r);return n.useMemo(function(){return"function"==typeof t?t(e):{...e,...t}},[e,t])}function d(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(l):t.components||l:i(t.components),n.createElement(r.Provider,{value:e},t.children)}}}]);