"use strict";(self.webpackChunkfreewili_docs=self.webpackChunkfreewili_docs||[]).push([[1567],{5226:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"category","label":"Getting Started","collapsible":true,"collapsed":true,"items":[{"type":"link","href":"/intro","label":"Overview","docId":"getting-started/freewili","unlisted":false},{"type":"link","href":"/getting-started/the-basics","label":"The Basics","docId":"getting-started/the-basics","unlisted":false}],"href":"/"},{"type":"category","label":"Tutorials","collapsible":true,"collapsed":true,"items":[{"type":"link","href":"/tutorials/how-to-disable-free-wili-boot-sounds-via-serial-cli/","label":"How to Disable FREE-WILi Boot Sounds via Serial CLI","docId":"tutorials/how-to-disable-free-wili-boot-sounds-via-serial-cli/how-to-disable-free-wili-boot-sounds-via-serial-cli","unlisted":false}],"href":"/tutorials/"},{"type":"link","href":"/gpio","label":"GPIO","docId":"gpio","unlisted":false},{"type":"category","label":"Radios","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"Black Radio (CC1101)","collapsible":true,"collapsed":true,"items":[{"type":"link","href":"/radios/black-radio-cc1101/cc1101-radio-settings","label":"CC1101 Radio Settings","docId":"radios/black-radio-cc1101/cc1101-radio-settings","unlisted":false}],"href":"/radios/black-radio-cc1101/"}],"href":"/radios/"},{"type":"category","label":"GUI : Screen, Buttons, and Lights","collapsible":true,"collapsed":true,"items":[{"type":"link","href":"/gui-screen-buttons-and-lights/color-display-widgets","label":"Color Display Widgets","docId":"gui-screen-buttons-and-lights/color-display-widgets","unlisted":false},{"type":"link","href":"/gui-screen-buttons-and-lights/making-sounds","label":"Making sounds","docId":"gui-screen-buttons-and-lights/making-sounds","unlisted":false},{"type":"link","href":"/gui-screen-buttons-and-lights/displaying-images","label":"Displaying Images","docId":"gui-screen-buttons-and-lights/displaying-images","unlisted":false},{"type":"link","href":"/gui-screen-buttons-and-lights/buttons","label":"Buttons","docId":"gui-screen-buttons-and-lights/buttons","unlisted":false},{"type":"link","href":"/gui-screen-buttons-and-lights/accelerometer","label":"Sensors: Accelerometer & Temperature","docId":"gui-screen-buttons-and-lights/accelerometer","unlisted":false},{"type":"link","href":"/gui-screen-buttons-and-lights/led-light-show","label":"LED Light Show","docId":"gui-screen-buttons-and-lights/led-light-show","unlisted":false},{"type":"link","href":"/gui-screen-buttons-and-lights/capturing-audio-from-microphone","label":"Capturing Audio from Microphone","docId":"gui-screen-buttons-and-lights/capturing-audio-from-microphone","unlisted":false},{"type":"link","href":"/gui-screen-buttons-and-lights/ir-infrared-devices","label":"IR Infrared Devices","docId":"gui-screen-buttons-and-lights/ir-infrared-devices","unlisted":false},{"type":"link","href":"/gui-screen-buttons-and-lights/gui-api-basics","label":"GUI API Basics","docId":"gui-screen-buttons-and-lights/gui-api-basics","unlisted":false},{"type":"link","href":"/gui-screen-buttons-and-lights/rtc-real-time-clock","label":"RTC Real Time Clock","docId":"gui-screen-buttons-and-lights/rtc-real-time-clock","unlisted":false},{"type":"link","href":"/gui-screen-buttons-and-lights/li-ion-battery-and-power-management","label":"Li-ION Battery and Power Management","docId":"gui-screen-buttons-and-lights/li-ion-battery-and-power-management","unlisted":false},{"type":"link","href":"/gui-screen-buttons-and-lights/about-app","label":"About App","docId":"gui-screen-buttons-and-lights/about-app","unlisted":false}],"href":"/gui-screen-buttons-and-lights/"},{"type":"category","label":"Extending with Orcas","collapsible":true,"collapsed":true,"items":[{"type":"link","href":"/extending-with-orcas/maestro-debug-orca","label":"Maestro Debug Orca","docId":"extending-with-orcas/maestro-debug-orca","unlisted":false},{"type":"link","href":"/extending-with-orcas/jambu-orca","label":"Jambu Serial LED Control Orca","docId":"extending-with-orcas/jambu-orca","unlisted":false},{"type":"link","href":"/extending-with-orcas/bottlenose-wifi-orca","label":"Bottlenose WiFi Orca","docId":"extending-with-orcas/bottlenose-wifi-orca","unlisted":false},{"type":"link","href":"/extending-with-orcas/custom-orca","label":"Custom Orca","docId":"extending-with-orcas/custom-orca","unlisted":false}],"href":"/extending-with-orcas/"},{"type":"category","label":"IO App","collapsible":true,"collapsed":true,"items":[{"type":"link","href":"/io-app/main-menu-header","label":"Main Menu Header","docId":"io-app/main-menu-header","unlisted":false},{"type":"link","href":"/io-app/main-menu-commands","label":"Main Menu Commands","docId":"io-app/main-menu-commands","unlisted":false},{"type":"link","href":"/io-app/host-usb-serial-api","label":"Host USB Serial API","docId":"io-app/host-usb-serial-api","unlisted":false},{"type":"link","href":"/io-app/scripting-with-wasm","label":"Scripting with WASM","docId":"io-app/scripting-with-wasm","unlisted":false},{"type":"link","href":"/io-app/scripting-with-zoomio","label":"Scripting with ZoomIO","docId":"io-app/scripting-with-zoomio","unlisted":false},{"type":"link","href":"/io-app/file-system-menu","label":"File System Menu","docId":"io-app/file-system-menu","unlisted":false},{"type":"link","href":"/io-app/logic-analyzer","label":"Logic Analyzer","docId":"io-app/logic-analyzer","unlisted":false},{"type":"category","label":"Settings Menu","collapsible":true,"collapsed":true,"items":[{"type":"link","href":"/io-app/settings-menu/spi-settings","label":"SPI Settings","docId":"io-app/settings-menu/spi-settings","unlisted":false},{"type":"link","href":"/io-app/settings-menu/i2c-settings","label":"I2C settings","docId":"io-app/settings-menu/i2c-settings","unlisted":false},{"type":"link","href":"/io-app/settings-menu/uart-settings","label":"UART Settings","docId":"io-app/settings-menu/uart-settings","unlisted":false},{"type":"link","href":"/io-app/settings-menu/fpga-settings","label":"FPGA Settings","docId":"io-app/settings-menu/fpga-settings","unlisted":false},{"type":"link","href":"/io-app/settings-menu/gpio-settings","label":"GPIO Settings","docId":"io-app/settings-menu/gpio-settings","unlisted":false},{"type":"link","href":"/io-app/settings-menu/rtc-settings","label":"RTC Settings","docId":"io-app/settings-menu/rtc-settings","unlisted":false}],"href":"/io-app/settings-menu/"}],"href":"/io-app/"},{"type":"category","label":"Hardware Low Level Details","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"iCE40 FPGA","collapsible":true,"collapsed":true,"items":[{"type":"link","href":"/hardware-low-level-details/ice40-fpga/fpga-programming","label":"FPGA Programming","docId":"hardware-low-level-details/ice40-fpga/fpga-programming","unlisted":false},{"type":"link","href":"/hardware-low-level-details/ice40-fpga/fpga-clock","label":"FPGA Clock","docId":"hardware-low-level-details/ice40-fpga/fpga-clock","unlisted":false},{"type":"link","href":"/hardware-low-level-details/ice40-fpga/fpga-connections","label":"FPGA Connections","docId":"hardware-low-level-details/ice40-fpga/fpga-connections","unlisted":false},{"type":"link","href":"/hardware-low-level-details/ice40-fpga/fpga-default-application","label":"FPGA Default Application","docId":"hardware-low-level-details/ice40-fpga/fpga-default-application","unlisted":false}],"href":"/hardware-low-level-details/ice40-fpga/"}],"href":"/hardware-low-level-details/"},{"type":"link","href":"/python-library","label":"FREE-WILI Python Library and Examples","docId":"python-library","unlisted":false},{"type":"link","href":"/icsvillage-badge-defcon33","label":"ICS Village Badge DEFCON33","docId":"icsvillage-badge-defcon33","unlisted":false},{"type":"link","href":"/defcon32-badge-edition","label":"DEFCON32 Badge Edition","docId":"defcon32-badge-edition","unlisted":false},{"type":"link","href":"/freewili-firmware-update","label":"FREE-WILi Firmware Update","docId":"freewili-firmware-update","unlisted":false},{"type":"category","label":"Helpful Links","collapsible":true,"collapsed":true,"items":[{"type":"link","href":"/helpful-links/learn-uart/","label":"Learn UART","docId":"helpful-links/learn-uart/learn-uart","unlisted":false}],"href":"/helpful-links/"},{"type":"link","href":"/buy-now","label":"Buy Now From Our Distributor Network","docId":"buy-now","unlisted":false}]},"docs":{"buy-now":{"id":"buy-now","title":"Buy Now From Our Distributor Network","description":"Purchase FREE-WILi from our trusted distributor network. Find the best deals and check availability directly from Intrepid Control Systems or other authorized distributors.","sidebar":"tutorialSidebar"},"defcon32-badge-edition":{"id":"defcon32-badge-edition","title":"DEFCON32 Badge Edition \u2013 FREE-WILi Code Support for DEFCON Badge | I2C, IR, and GPIO Control","description":"Unlock the full potential of your DEFCON32 badge with FREE-WILi code support. Enable I2C, GPIO, IR, LEDs, and more. Learn how to load the FREE-WILi uf2 file and use the SAO connector for IR receive and expansion.","sidebar":"tutorialSidebar"},"extending-with-orcas/bottlenose-wifi-orca":{"id":"extending-with-orcas/bottlenose-wifi-orca","title":"Bottlenose WiFi Orca \u2013 ESP32-C6 IoT Dev Board with USB-C & Qwiic","description":"The Bottlenose WiFi Orca is a compact ESP32-C6 development board with dual-mode Wi-Fi, Bluetooth, USB-C, Qwiic connector, and ultra-low power consumption\u2014ideal for advanced IoT prototyping.","sidebar":"tutorialSidebar"},"extending-with-orcas/custom-orca":{"id":"extending-with-orcas/custom-orca","title":"Custom Orca Modules - Example Projects for KiCAD and Altium Designer","description":"Explore example projects for creating custom Orca modules with KiCAD and Altium Designer. Enhance your FREE-WILi setup with tailored functionality and design support.","sidebar":"tutorialSidebar"},"extending-with-orcas/extending-with-orcas":{"id":"extending-with-orcas/extending-with-orcas","title":"Extending with Orcas - Custom and Off-the-Shelf Modules","description":"Explore Orca modules for FREE-WILi to add functionality. Includes off-the-shelf options like Maestro and Jambu, plus guides for custom modules.","sidebar":"tutorialSidebar"},"extending-with-orcas/jambu-orca":{"id":"extending-with-orcas/jambu-orca","title":"Jambu Serial LED Control Orca \u2013 8-Channel LED Driver with I2C & Qwiic","description":"The Jambu Serial LED Control Orca is a compact 8-channel LED driver breakout module with I2C-compatible control and Qwiic support, ideal for controlling RGB LED strips, LEDs, and bulbs.","sidebar":"tutorialSidebar"},"extending-with-orcas/maestro-debug-orca":{"id":"extending-with-orcas/maestro-debug-orca","title":"Maestro Debug Orca - Development and Troubleshooting Tool for FREE-WILi","description":"Discover the Maestro Orca, a development tool for FREE-WILi featuring a USB debugger, IO test points, and support for various connectors. Includes LED indicators, GPIO switches, and prototyping connectors.","sidebar":"tutorialSidebar"},"freewili-firmware-update":{"id":"freewili-firmware-update","title":"FREE-WILi Firmware Update - How to Update FREE-WILi Firmware, Main and Display Processors","description":"Learn how to update the firmware on both RP2040 processors of FREE-WILi. Follow detailed steps to update the MAIN and DISPLAY processors using UF2 files. Ensure each processor receives the correct firmware for proper operation.","sidebar":"tutorialSidebar"},"getting-started/freewili":{"id":"getting-started/freewili","title":"FREE-WILi Documentation","description":"FREE-WILi is an embedded development tool for testing, debugging, and developing electronic systems. Explore its documentation, software, hardware, and more.","sidebar":"tutorialSidebar"},"getting-started/index":{"id":"getting-started/index","title":"Quickstart","description":"demo.","sidebar":"tutorialSidebar"},"getting-started/the-basics":{"id":"getting-started/the-basics","title":"The Basics","description":"Learn how to turn your FREE-WILi device on or off, utilize the USB interfaces for FPGA, IO App, and GUI App connectivity, and update firmware using the integrated USB boot loader.","sidebar":"tutorialSidebar"},"gpio":{"id":"gpio","title":"FREE-WILi GPIO Pinout, Voltage Levels, and Interface Guide","description":"Discover FREE-WILi\'s GPIO pinout, voltage levels, I2C interface, and IO pins. Includes pin descriptions and downloadable datasheets for detailed specs.","sidebar":"tutorialSidebar"},"gui-screen-buttons-and-lights/about-app":{"id":"gui-screen-buttons-and-lights/about-app","title":"FREE-WILi About App: Firmware Info, Loop Times, and Device Monitoring","description":"Explore FREE-WILi\'s About App, which provides detailed firmware version info, loop times for app performance, and screens for RTC and battery status, offering a comprehensive overview of your device","sidebar":"tutorialSidebar"},"gui-screen-buttons-and-lights/accelerometer":{"id":"gui-screen-buttons-and-lights/accelerometer","title":"FREE-WILi Accelerometer - LIS3DH Sensor Data and API Integration","description":"Explore the FREE-WILi accelerometer (LIS3DH) with data viewable from the serial menu and API. Understand axis orientation and access sensor details.","sidebar":"tutorialSidebar"},"gui-screen-buttons-and-lights/buttons":{"id":"gui-screen-buttons-and-lights/buttons","title":"FREE-WILi Button Controls: Functions, API, and Click Simulation","description":"Discover FREE-WILi\'s 5 buttons, their functions, and support for clicks, double clicks, startup press, and long press, plus how to use API events and simulate clicks with Roku Remote.","sidebar":"tutorialSidebar"},"gui-screen-buttons-and-lights/capturing-audio-from-microphone":{"id":"gui-screen-buttons-and-lights/capturing-audio-from-microphone","title":"FREE-WILi Microphone - Capturing and Recording Audio","description":"Capture audio with FREE-WILi\'s integrated microphone at 8000 Hz. Record to WAV files via serial menu or GUIAPI. Configure recording time and volume.","sidebar":"tutorialSidebar"},"gui-screen-buttons-and-lights/color-display-widgets":{"id":"gui-screen-buttons-and-lights/color-display-widgets","title":"FREE-WILi Color Display Widgets - API and Control Properties","description":"Configure FREE-WILi color display widgets using the API. Includes details on LED, images, log lists, plots, buttons, and control properties and data.","sidebar":"tutorialSidebar"},"gui-screen-buttons-and-lights/displaying-images":{"id":"gui-screen-buttons-and-lights/displaying-images","title":"FREE-WILi Image Display - Custom Images, API Integration, and Formats","description":"Learn to display custom images on FREE-WILi using the API. Convert images to FWI format, use ROM images, and understand the 565 color format. See examples and tools.","sidebar":"tutorialSidebar"},"gui-screen-buttons-and-lights/gui-api-basics":{"id":"gui-screen-buttons-and-lights/gui-api-basics","title":"FREE-WILi GUI API: Control Display & Sensors via C/wasm","description":"Control FREE-WILi display and sensors with the C-based GUI API, featuring wasm support. Manage GUI elements, handle events, and utilize global logs for seamless integration.","sidebar":"tutorialSidebar"},"gui-screen-buttons-and-lights/gui-screen-buttons-and-lights":{"id":"gui-screen-buttons-and-lights/gui-screen-buttons-and-lights","title":"FREE-WILi GUI - Screen, Buttons, Lights/LEDs, and More","description":"Explore the FREE-WILi user interface with a 320x240 color display, multi-color buttons, LEDs, speaker, microphone, and more. Details on each component included.","sidebar":"tutorialSidebar"},"gui-screen-buttons-and-lights/ir-infrared-devices":{"id":"gui-screen-buttons-and-lights/ir-infrared-devices","title":"FREE-WILi IR Control: Custom Remotes & Roku Integration","description":"Control and customize your IR devices with Free Wili\'s built-in IR receiver and transmitter. Create custom remotes, view and send IR codes, and enable Roku remote control.","sidebar":"tutorialSidebar"},"gui-screen-buttons-and-lights/led-light-show":{"id":"gui-screen-buttons-and-lights/led-light-show","title":"FREE-WILi LED Light Show: Custom LED Control & Effects","description":"Control FREE-WILi\'s 7 full-color LEDs with patterns, sensor effects, and APIs. Customize LED behavior, manage light strips, and switch modes via a Roku IR remote.","sidebar":"tutorialSidebar"},"gui-screen-buttons-and-lights/li-ion-battery-and-power-management":{"id":"gui-screen-buttons-and-lights/li-ion-battery-and-power-management","title":"FREE-WILi Li-ION Battery and Power Management: Specifications, App Monitoring, and Settings","description":"FREE-WILi\'s Lithium ION Battery powers portable applications with customizable power management and real-time status monitoring, enhancing battery life and device efficiency.","sidebar":"tutorialSidebar"},"gui-screen-buttons-and-lights/making-sounds":{"id":"gui-screen-buttons-and-lights/making-sounds","title":"FREE-WILi Sound Playback - WAV Files, API Calls, and Tools","description":"Learn how to play WAV files on FREE-WILi, including supported formats, API calls for sound playback, and tools for editing WAV files. Explore ROM sounds and resources.","sidebar":"tutorialSidebar"},"gui-screen-buttons-and-lights/rtc-real-time-clock":{"id":"gui-screen-buttons-and-lights/rtc-real-time-clock","title":"FREE-WILi Real Time Clock (RTC): Functions, API, and MCP7940N Details","description":"Explore FREE-WILi\'s Real Time Clock (RTC) powered by the MCP7940N IC, used for file timestamping and accessible via API. Learn about RTC settings, events, and hardware details.","sidebar":"tutorialSidebar"},"hardware-low-level-details/hardware-low-level-details":{"id":"hardware-low-level-details/hardware-low-level-details","title":"FREE-WILi Hardware Low-Level Details - RP2040 and FPGA Front End","description":"Explore the hardware low-level details of FREE-WILi for custom app development on the RP2040 PI Pico processor and FPGA front-end design. Gain insights for advanced hardware interfacing and customization.","sidebar":"tutorialSidebar"},"hardware-low-level-details/ice40-fpga/fpga-clock":{"id":"hardware-low-level-details/ice40-fpga/fpga-clock","title":"FPGA Clock Configuration - Managing Clock Signals for iCE40 FPGA","description":"Explore how the FPGA clock signal is supplied by the RP2040 on GPIO23 using the Clock Generator. Learn about the default setting of 125 MHz divided by 4 and how to configure FPGA clock sources and dividers using the Intrepid IO app.","sidebar":"tutorialSidebar"},"hardware-low-level-details/ice40-fpga/fpga-connections":{"id":"hardware-low-level-details/ice40-fpga/fpga-connections","title":"FPGA Connections and Pin Constraints for iCE40 FPGA","description":"Discover how the iCE40 FPGA connects to the Serial SRAM, IO Drivers, and the RP2040. Access the pin constraints file (PCF) for detailed connections and support for development tools like yosys, nextpnr, icestorm, and icecube2.","sidebar":"tutorialSidebar"},"hardware-low-level-details/ice40-fpga/fpga-default-application":{"id":"hardware-low-level-details/ice40-fpga/fpga-default-application","title":"FPGA Default Application for FREE-WILi - Sigrok-Compatible Logic Analyzer","description":"Explore the default FPGA application for FREE-WILi that turns it into a sigrok-compatible logic analyzer. The design includes SPI, UART, and GPIO configurations, with sampling at 31.25 MHz and encoding via Run-Length Encoding. Detailed channel name translations for SPI are provided.","sidebar":"tutorialSidebar"},"hardware-low-level-details/ice40-fpga/fpga-programming":{"id":"hardware-low-level-details/ice40-fpga/fpga-programming","title":"FPGA Programming for iCE40 - Automatic and On-Demand Configuration","description":"Learn how the iCE40 FPGA in FREE-WILi is automatically programmed at power up with a default configuration. Explore how it can be reprogrammed anytime using the SPI Slave Configuration Interface and stored bit files from the RP2040 or USB.","sidebar":"tutorialSidebar"},"hardware-low-level-details/ice40-fpga/ice40-fpga":{"id":"hardware-low-level-details/ice40-fpga/ice40-fpga","title":"iCE40 FPGA in FREE-WILi - Overview and Specifications","description":"Discover the iCE40 FPGA in FREE-WILi, featuring high-speed IO and state machines. Learn about its default application, optional configuration changes, and part numbers for FTDI USB, Serial SRAM, and FPGA components.","sidebar":"tutorialSidebar"},"helpful-links/helpful-links":{"id":"helpful-links/helpful-links","title":"Helpful Links for RP2040, FPGA, and WebAssembly - FREE-WILi","description":"Explore essential resources including C/C++ installers for RP2040, Sub-1 GHz support forums, FPGA tutorials with iCE40, and more information on WebAssembly. Access guides, forums, and tutorials to enhance your projects.","sidebar":"tutorialSidebar"},"helpful-links/learn-uart/learn-uart":{"id":"helpful-links/learn-uart/learn-uart","title":"Learn UART - Introduction Video and Deep Dive for RP2040","description":"Watch introductory and in-depth videos on UART communication for the RP2040. Explore the basics with an introductory video and gain detailed insights with a deep dive into UART on the RP2040.","sidebar":"tutorialSidebar"},"icsvillage-badge-defcon33":{"id":"icsvillage-badge-defcon33","title":"ICS Village Badge for DEFCON 33 with AI power","description":"Explore the ICS Village Badge for DEFCON 33 \u2014 an AI-powered hardware platform with gas & alcohol sensors, ESP32 Wi-Fi, RTC, and WASM scripting. Designed for hands-on ICS security, featuring a full-color screen, GUI support, and open-source tools.","sidebar":"tutorialSidebar"},"io-app/file-system-menu":{"id":"io-app/file-system-menu","title":"File System Menu for FREE-WILi - Manage and Interact with Files","description":"Learn how to use the File System Menu on FREE-WILi to manage directories and files. Discover commands for changing directories, creating and removing files, uploading, downloading, and more. Access detailed file management functionalities.","sidebar":"tutorialSidebar"},"io-app/host-usb-serial-api":{"id":"io-app/host-usb-serial-api","title":"FREE-WILi Host USB Serial API - Controlling FREE-WILi via USB Serial Port","description":"Control FREE-WILi from a Linux/Windows PC or Raspberry Pi using the USB serial API. Learn how to open a USB serial port, send menu commands, and manage responses. Discover how to toggle menu text with CTRL-B and CTRL-C.","sidebar":"tutorialSidebar"},"io-app/io-app":{"id":"io-app/io-app","title":"FREE-WILi IO App - Serial Command Line, API, Scripting, and File System","description":"Discover the FREE-WILi IO app with a serial command line interface, host API support, on-board scripting with WASM, and a file system for standalone operations. Learn to control and script FREE-WILi\'s IO.","sidebar":"tutorialSidebar"},"io-app/logic-analyzer":{"id":"io-app/logic-analyzer","title":"Logic Analyzer for FREE-WILi - FPGA-Based Digital Protocol Analysis","description":"Discover the FPGA-based Logic Analyzer for FREE-WILi, compatible with Sigrok PulseView. Learn how it operates transparently with FREE-WILi\'s IO features for testing digital protocols. Access FPGA bit files and adjust settings through the FREE-WILi interface.","sidebar":"tutorialSidebar"},"io-app/main-menu-commands":{"id":"io-app/main-menu-commands","title":"FREE-WILi Main Menu Commands - IO Control, SPI, I2C, UART, FPGA, and Scripting","description":"Discover the FREE-WILi main menu commands for controlling IO, generating PWM, reading/writing SPI and I2C, managing UART, and handling FPGA and script operations. Learn about each command\'s functionality and arguments","sidebar":"tutorialSidebar"},"io-app/main-menu-header":{"id":"io-app/main-menu-header","title":"FREE-WILi Main Menu Header - IO State, File System, and Real-Time Clock","description":"Explore the FREE-WILi main menu header showing IO states, UART, SPI, I2C, GPIO configurations, FPGA clock, and file system contents. View real-time clock settings and system status.","sidebar":"tutorialSidebar"},"io-app/scripting-with-wasm":{"id":"io-app/scripting-with-wasm","title":"Scripting with WebAssembly (WASM) for FREE-WILi - Setup, Compilation, and Execution","description":"Learn how to script for FREE-WILi using WebAssembly (WASM). Discover the setup and installation of WASM tools, writing and compiling scripts, and executing them on FREE-WILi. Includes guides for Ubuntu Linux and Visual Studio Code configuration.","sidebar":"tutorialSidebar"},"io-app/scripting-with-zoomio":{"id":"io-app/scripting-with-zoomio","title":"Scripting with ZoomIO for FREE-WILi - Precision GPIO Control and Integration","description":"Explore ZoomIO scripting for FREE-WILi to achieve sub-nanosecond GPIO control with native ARM assembly. Learn about ZoomIO commands, integration with the IOApp, and how to write and execute scripts for precise digital waveform generation.","sidebar":"tutorialSidebar"},"io-app/settings-menu/fpga-settings":{"id":"io-app/settings-menu/fpga-settings","title":"FREE-WILi FPGA Settings - Clock Source, Divider Options","description":"Adjust FPGA settings in FREE-WILi including clock source selection and clock divider configuration. Choose between various internal and external clocks to optimize FPGA performanc.","sidebar":"tutorialSidebar"},"io-app/settings-menu/gpio-settings":{"id":"io-app/settings-menu/gpio-settings","title":"GPIO Settings","description":"","sidebar":"tutorialSidebar"},"io-app/settings-menu/i2c-settings":{"id":"io-app/settings-menu/i2c-settings","title":"FREE-WILi I2C Settings - Frequency, Pull-Ups","description":"Configure I2C settings in FREE-WILi, including bit rate (up to 400kHz) and pull-up resistors. Ensure proper I2C bus operation with adjustable pull-up settings","sidebar":"tutorialSidebar"},"io-app/settings-menu/rtc-settings":{"id":"io-app/settings-menu/rtc-settings","title":"RTC Settings","description":"The RTC settings allows you to configure the real time clock. See this topic for more information.","sidebar":"tutorialSidebar"},"io-app/settings-menu/settings-menu":{"id":"io-app/settings-menu/settings-menu","title":"FREE-WILi Settings Menu - Configure SPI, I2C, UART, FPGA, and More","description":"Access and configure various settings in the FREE-WILi IO App, including SPI, I2C, UART, FPGA clock, and GPIO directions. Learn how to set up default scripts, FPGA configurations, and save settings for startup. Explore detailed options in the settings menu.","sidebar":"tutorialSidebar"},"io-app/settings-menu/spi-settings":{"id":"io-app/settings-menu/spi-settings","title":"FREE-WILi SPI Settings - Frequency, Chip Select, Data Bits, CPOL, CPHA","description":"Configure SPI settings in FREE-WILi including clock frequency, chip select pin, data bits, CPOL, and CPHA. Ensure optimal communication with detailed settings for SPI operation.","sidebar":"tutorialSidebar"},"io-app/settings-menu/uart-settings":{"id":"io-app/settings-menu/uart-settings","title":"FREE-WILi UART Settings - Baud Rate, Handshaking, Data Bits","description":"Configure UART settings in FREE-WILi, including baud rate, RTS/CTS handshaking, data bits, parity, and stop bits. Learn more about UART configurations and options.","sidebar":"tutorialSidebar"},"python-library":{"id":"python-library","title":"FREE-WILI Python Library and Examples","description":"Explore the FREE-WILi Python API for easy interaction with FREE-WILi devices. Includes CLI tools for serial communication and image conversion, setup instructions, usage examples, and udev rules for Linux access.","sidebar":"tutorialSidebar"},"radios/black-radio-cc1101/black-radio-cc1101":{"id":"radios/black-radio-cc1101/black-radio-cc1101","title":"FREE-WILi Black Radio (CC1101) - Configuration and Capabilities Guide","description":"Explore the FREE-WILi Black Radio with two CC1101 packet radios, featuring configurable settings and an integrated packet processor. More details in the CC1101 datasheet.","sidebar":"tutorialSidebar"},"radios/black-radio-cc1101/cc1101-radio-settings":{"id":"radios/black-radio-cc1101/cc1101-radio-settings","title":"CC1101 Radio Settings - Configuration Guide and Reference FREE-WILi","description":"View the CC1101 radio settings for FREE-WILi, based on the ELECHOUSE Arduino driver. Includes a visual configuration guide and reference link.","sidebar":"tutorialSidebar"},"radios/radios":{"id":"radios/radios","title":"FREE-WILi Radios - CC1101 Overview","description":"Learn about the integrated radios in FREE-WILi devices, including the CC1101 for Sub-GHz and upcoming radios for diverse wireless applications.","sidebar":"tutorialSidebar"},"tutorials/how-to-disable-free-wili-boot-sounds-via-serial-cli/how-to-disable-free-wili-boot-sounds-via-serial-cli":{"id":"tutorials/how-to-disable-free-wili-boot-sounds-via-serial-cli/how-to-disable-free-wili-boot-sounds-via-serial-cli","title":"How to Disable FREE-WILi Boot Sounds via Serial CLI","description":"Learn how to disable FREE-WILi display boot sounds using a serial CLI connection. Step-by-step instructions using PuTTY to access settings and turn off system audio.","sidebar":"tutorialSidebar"},"tutorials/index":{"id":"tutorials/index","title":"Tutorials","description":"Discover official FREE-WILi tutorials designed to help you configure, customize, and optimize your system. New step-by-step guides are added regularly\u2014stay tuned!","sidebar":"tutorialSidebar"}}}}')}}]);