"use strict";(self.webpackChunkfreewili_docs=self.webpackChunkfreewili_docs||[]).push([[387],{6579:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>d,contentTitle:()=>c,default:()=>h,frontMatter:()=>r,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"io-app/settings-menu/fpga-settings","title":"FREE-WILi FPGA Settings - Clock Source, Divider Options","description":"Adjust FPGA settings in FREE-WILi including clock source selection and clock divider configuration. Choose between various internal and external clocks to optimize FPGA performanc.","source":"@site/docs/io-app/settings-menu/fpga-settings.md","sourceDirName":"io-app/settings-menu","slug":"/io-app/settings-menu/fpga-settings","permalink":"/io-app/settings-menu/fpga-settings","draft":false,"unlisted":false,"editUrl":"https://github.com/freewili/FreeWili_WebDocs/blob/main/docs/io-app/settings-menu/fpga-settings.md","tags":[],"version":"current","lastUpdatedAt":1724134738000,"sidebarPosition":4,"frontMatter":{"title":"FREE-WILi FPGA Settings - Clock Source, Divider Options","description":"Adjust FPGA settings in FREE-WILi including clock source selection and clock divider configuration. Choose between various internal and external clocks to optimize FPGA performanc.","keywords":["FREE-WILi FPGA Settings","FPGA Clock Source","FPGA Clock Divider","FPGA Configuration","Clock Source Options","FPGA Performance Tuning"],"sidebar_position":4,"sidebar_label":"FPGA Settings"},"sidebar":"tutorialSidebar","previous":{"title":"UART Settings","permalink":"/io-app/settings-menu/uart-settings"},"next":{"title":"GPIO Settings","permalink":"/io-app/settings-menu/gpio-settings"}}');var s=i(4848),o=i(8453);const r={title:"FREE-WILi FPGA Settings - Clock Source, Divider Options",description:"Adjust FPGA settings in FREE-WILi including clock source selection and clock divider configuration. Choose between various internal and external clocks to optimize FPGA performanc.",keywords:["FREE-WILi FPGA Settings","FPGA Clock Source","FPGA Clock Divider","FPGA Configuration","Clock Source Options","FPGA Performance Tuning"],sidebar_position:4,sidebar_label:"FPGA Settings"},c="FPGA Settings",d={},l=[];function a(e){const t={h1:"h1",header:"header",img:"img",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"fpga-settings",children:"FPGA Settings"})}),"\n",(0,s.jsx)(t.p,{children:"The FPGA settings are shown below:"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:(0,s.jsx)(t.strong,{children:"Name"})}),(0,s.jsx)(t.th,{children:(0,s.jsx)(t.strong,{children:"Description"})}),(0,s.jsx)(t.th,{children:(0,s.jsx)(t.strong,{children:"Notes"})})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Clock Source"}),(0,s.jsx)(t.td,{children:"This is the internal clock used to generate the FPGA Clock"}),(0,s.jsx)(t.td,{children:"There are 4 options: the main PLL generated clock 125 Mhz, the 12 Mhz source oscillator, the 48 Mhz USB clock, and the internal 48khz RC analog clock"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Clock divider (int)"}),(0,s.jsx)(t.td,{children:"The integer part of the divider applied to the clock source"}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Clock divider (frac)"}),(0,s.jsx)(t.td,{children:"The fractional part of clock divider"}),(0,s.jsx)(t.td,{})]})]})]}),"\n",(0,s.jsx)("div",{class:"text--center",children:(0,s.jsx)("figure",{children:(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.img,{alt:"The FPGA settings.",src:i(2219).A+"",title:"The FPGA settings.",width:"528",height:"555"}),"\r\n",(0,s.jsx)("figcaption",{children:"The FPGA settings."})]})})})]})}function h(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},2219:(e,t,i)=>{i.d(t,{A:()=>n});const n=i.p+"assets/images/fpga-settings-d0b6f5e0978157d7e9f39d7130b7e46e.png"},8453:(e,t,i)=>{i.d(t,{R:()=>r,x:()=>c});var n=i(6540);const s={},o=n.createContext(s);function r(e){const t=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),n.createElement(o.Provider,{value:t},e.children)}}}]);