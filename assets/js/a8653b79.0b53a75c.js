"use strict";(self.webpackChunkfreewili_docs=self.webpackChunkfreewili_docs||[]).push([[8744],{1094:(e,i,t)=>{t.d(i,{A:()=>n});const n=t.p+"assets/images/gpio-pinout-235a5d5cff9454a4636f9a43b9bd417d.jpg"},8453:(e,i,t)=>{t.d(i,{R:()=>s,x:()=>l});var n=t(6540);const o={},r=n.createContext(o);function s(e){const i=n.useContext(r);return n.useMemo(function(){return"function"==typeof e?e(i):{...i,...e}},[i,e])}function l(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),n.createElement(r.Provider,{value:i},e.children)}},9240:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>a,contentTitle:()=>l,default:()=>p,frontMatter:()=>s,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"gpio/gpio","title":"FREE-WILi GPIO Overview: Digital Protocols and Pin Header Interface","description":"Complete guide to FREE-WILi\'s GPIO pin header for SPI, I2C, UART, and digital I/O operations. Features flexible voltage levels, FPGA integration, and real-time protocol capabilities.","source":"@site/docs/gpio/gpio.md","sourceDirName":"gpio","slug":"/gpio/","permalink":"/gpio/","draft":false,"unlisted":false,"editUrl":"https://github.com/freewili/FreeWili_WebDocs/blob/main/docs/gpio/gpio.md","tags":[],"version":"current","lastUpdatedAt":1758897739000,"sidebarPosition":2,"frontMatter":{"title":"FREE-WILi GPIO Overview: Digital Protocols and Pin Header Interface","description":"Complete guide to FREE-WILi\'s GPIO pin header for SPI, I2C, UART, and digital I/O operations. Features flexible voltage levels, FPGA integration, and real-time protocol capabilities.","keywords":["FREE-WILi GPIO","pin header","SPI","I2C","UART","digital protocols","FPGA","voltage levels","embedded development","protocol interface"],"sidebar_position":2,"sidebar_label":"GPIO"},"sidebar":"tutorialSidebar","previous":{"title":"FREE-WILi Firmware Update","permalink":"/getting-started/freewili-firmware-update"},"next":{"title":"Pinout & Electrical","permalink":"/gpio/gpio-pinout"}}');var o=t(4848),r=t(8453);const s={title:"FREE-WILi GPIO Overview: Digital Protocols and Pin Header Interface",description:"Complete guide to FREE-WILi's GPIO pin header for SPI, I2C, UART, and digital I/O operations. Features flexible voltage levels, FPGA integration, and real-time protocol capabilities.",keywords:["FREE-WILi GPIO","pin header","SPI","I2C","UART","digital protocols","FPGA","voltage levels","embedded development","protocol interface"],sidebar_position:2,sidebar_label:"GPIO"},l="GPIO",a={},c=[{value:"Overview",id:"overview",level:2},{value:"GPIO System Architecture",id:"gpio-system-architecture",level:2},{value:"Quick Start",id:"quick-start",level:2},{value:"GPIO Documentation Sections",id:"gpio-documentation-sections",level:2},{value:"Related Documentation",id:"related-documentation",level:2}];function d(e){const i={a:"a",h1:"h1",h2:"h2",header:"header",img:"img",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(i.header,{children:(0,o.jsx)(i.h1,{id:"gpio",children:"GPIO"})}),"\n",(0,o.jsx)(i.h2,{id:"overview",children:"Overview"}),"\n",(0,o.jsx)(i.p,{children:"FREE-WILi includes a GPIO pin header for interacting with digital protocols. This GPIO header is flexible, allowing varying voltage levels and IO direction control. The GPIO system supports SPI, I2C, UART, and general-purpose digital I/O operations."}),"\n",(0,o.jsx)("div",{class:"text--center",children:(0,o.jsx)("figure",{children:(0,o.jsxs)(i.p,{children:[(0,o.jsx)(i.img,{alt:"FREE-WILi Pinout",src:t(1094).A+"",title:"Pinout",width:"768",height:"506"}),"\n",(0,o.jsx)("figcaption",{children:"FREE-WILi Pinout."})]})})}),"\n",(0,o.jsx)("br",{}),"\n",(0,o.jsx)("div",{class:"text--center",children:(0,o.jsx)("figure",{children:(0,o.jsxs)(i.p,{children:[(0,o.jsx)(i.img,{alt:"FREE-WILi GPIO Header",src:t(9762).A+"",title:"FREE-WILi GPIO Header",width:"500",height:"300"}),"\n",(0,o.jsx)("figcaption",{children:"FREE-WILi GPIO Header"})]})})}),"\n",(0,o.jsx)(i.h2,{id:"gpio-system-architecture",children:"GPIO System Architecture"}),"\n",(0,o.jsxs)(i.p,{children:["The GPIO pins are routed through level-shifting buffers and an ",(0,o.jsx)(i.a,{href:"./../hardware-low-level-details/ice40-fpga/",children:"iCE40UP5K FPGA"})," before connecting to the RP2040 main processor. This architecture enables real-time operations such as the ",(0,o.jsx)(i.a,{href:"../../scripting/io-app/logic-analyzer/",children:"logic analyzer"})," functionality while maintaining protocol compatibility."]}),"\n",(0,o.jsx)(i.h2,{id:"quick-start",children:"Quick Start"}),"\n",(0,o.jsxs)(i.ol,{children:["\n",(0,o.jsxs)(i.li,{children:[(0,o.jsx)(i.strong,{children:"Set I/O Voltage Level"}),": Connect a jumper between pins 2-4 (5V) or 4-6 (3.3V)","\n",(0,o.jsxs)(i.ul,{children:["\n",(0,o.jsxs)(i.li,{children:["Pin 4 ",(0,o.jsx)(i.strong,{children:"MUST"})," have voltage for GPIO to function"]}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(i.li,{children:[(0,o.jsx)(i.strong,{children:"Configure Pin Directions"}),": Use the GPIO panel in the GUI or ",(0,o.jsx)(i.a,{href:"./../scripting/io-app/settings-menu/",children:"settings menu"})," via serial console"]}),"\n",(0,o.jsxs)(i.li,{children:[(0,o.jsx)(i.strong,{children:"Select Protocol"}),": Access SPI, I2C, or UART functionality through the main console application"]}),"\n"]}),"\n",(0,o.jsx)(i.h2,{id:"gpio-documentation-sections",children:"GPIO Documentation Sections"}),"\n",(0,o.jsxs)(i.ul,{children:["\n",(0,o.jsxs)(i.li,{children:[(0,o.jsx)(i.a,{href:"./gpio-pinout",children:"Pinout & Electrical Specifications"})," - Pin descriptions, voltage levels, and electrical characteristics"]}),"\n",(0,o.jsxs)(i.li,{children:[(0,o.jsx)(i.a,{href:"/gpio/gpio-protocols",children:"Protocol Configuration"})," - SPI, I2C, and UART setup and specifications"]}),"\n",(0,o.jsxs)(i.li,{children:[(0,o.jsx)(i.a,{href:"/gpio/gpio-troubleshooting",children:"Common Issues & Troubleshooting"})," - Solutions to frequent problems"]}),"\n"]}),"\n",(0,o.jsx)(i.h2,{id:"related-documentation",children:"Related Documentation"}),"\n",(0,o.jsxs)(i.ul,{children:["\n",(0,o.jsxs)(i.li,{children:[(0,o.jsx)(i.a,{href:"./../scripting/io-app/logic-analyzer/",children:"Logic Analyzer"})," - Real-time GPIO monitoring and analysis"]}),"\n",(0,o.jsxs)(i.li,{children:[(0,o.jsx)(i.a,{href:"./../scripting/io-app/scripting-with-wasm/",children:"WASM Scripting"})," - Advanced GPIO control through WebAssembly"]}),"\n",(0,o.jsxs)(i.li,{children:[(0,o.jsx)(i.a,{href:"./../scripting/io-app/scripting-with-zoomio/",children:"ZoomIO Scripting"})," - Nanosecond-precision GPIO timing"]}),"\n",(0,o.jsxs)(i.li,{children:[(0,o.jsx)(i.a,{href:"./../scripting/io-app/settings-menu/",children:"Settings Menu"})," - GPIO direction and protocol configuration"]}),"\n"]})]})}function p(e={}){const{wrapper:i}={...(0,r.R)(),...e.components};return i?(0,o.jsx)(i,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},9762:(e,i,t)=>{t.d(i,{A:()=>n});const n=t.p+"assets/images/gpio-header-343c77bac9af87cb15cb286799127426.png"}}]);