"use strict";(self.webpackChunkfreewili_docs=self.webpackChunkfreewili_docs||[]).push([[4684],{8143:e=>{e.exports=JSON.parse('{"permalink":"/blog/wiLi-party","source":"@site/blog/2024-12-10/index.md","title":"WiLi-Party LED Minigames","description":"Inspiration","date":"2024-12-10T00:00:00.000Z","tags":[{"inline":false,"label":"FREE-WILi","permalink":"/blog/tags/FREE-WILi","description":"Make Embedded Systems Fun Again !"},{"inline":false,"label":"Mhacks","permalink":"/blog/tags/mhacks","description":"mhacks"},{"inline":false,"label":"Hackathon","permalink":"/blog/tags/hackathon","description":"hackathon"},{"inline":false,"label":"Student Project","permalink":"/blog/tags/studentproject","description":"studentproject"}],"readingTime":2.38,"hasTruncateMarker":true,"authors":[{"name":"Andi Shaska","title":"CSE @ University of Michigan","url":"https://www.linkedin.com/in/andi-shaska","imageURL":"https://media.licdn.com/dms/image/v2/D5603AQHXrZrh8KFeEw/profile-displayphoto-shrink_200_200/profile-displayphoto-shrink_200_200/0/1703796143917?e=2147483647&v=beta&t=RqiGYItuNXyk1k7RFprjvBrMkEkYIgivHqAJpiA8XCg","key":"Andi Shaska","page":null},{"name":"Harshad Bhojan","title":"Computer Science @ University of Michigan CoE","url":"https://www.linkedin.com/in/harshad-bhojan","imageURL":"https://media.licdn.com/dms/image/v2/C4E03AQEIRmbQhhAB5w/profile-displayphoto-shrink_200_200/profile-displayphoto-shrink_200_200/0/1608520744606?e=2147483647&v=beta&t=g5S5Fgc41al3WUtTO6aVXK_vjtp1L2QcMQTgVorbTzg","key":"Harshad Bhojan","page":null}],"frontMatter":{"slug":"wiLi-party","title":"WiLi-Party LED Minigames","authors":["Andi Shaska","Harshad Bhojan"],"tags":["FREE-WILi","mhacks","hackathon","student project"]},"unlisted":false,"prevItem":{"title":"thereMINI: Creating Music with Hand Gestures Using FREE-WILi for a Touch-Free Sound Experience","permalink":"/blog/theremini"},"nextItem":{"title":"WiLi Watch \u2013 Voice-Activated Wearable for Smart Home Control","permalink":"/blog/wiLi-watch"}}')},8453:(e,t,i)=>{i.d(t,{R:()=>r,x:()=>s});var a=i(6540);const n={},o=a.createContext(n);function r(e){const t=a.useContext(o);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:r(e.components),a.createElement(o.Provider,{value:t},e.children)}},8965:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>h,contentTitle:()=>l,default:()=>u,frontMatter:()=>s,metadata:()=>a,toc:()=>c});var a=i(8143),n=i(4848),o=i(8453),r=i(9948);const s={slug:"wiLi-party",title:"WiLi-Party LED Minigames",authors:["Andi Shaska","Harshad Bhojan"],tags:["FREE-WILi","mhacks","hackathon","student project"]},l=void 0,h={authorsImageUrls:[void 0,void 0]},c=[{value:"Inspiration",id:"inspiration",level:2},{value:"What it does",id:"what-it-does",level:2},{value:"How we built it",id:"how-we-built-it",level:2},{value:"Challenges we ran into",id:"challenges-we-ran-into",level:2},{value:"Accomplishments that we&#39;re proud of",id:"accomplishments-that-were-proud-of",level:2},{value:"What we learned",id:"what-we-learned",level:2},{value:"What&#39;s next for Wili-Party",id:"whats-next-for-wili-party",level:2},{value:"Built With",id:"built-with",level:3}];function d(e){const t={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",...(0,o.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(r.A,{videoId:"7VzAm0KVVoo"}),"\n",(0,n.jsx)("br",{}),"\n",(0,n.jsx)(t.h2,{id:"inspiration",children:"Inspiration"}),"\n",(0,n.jsx)(t.p,{children:"We love competitive games like Mario Party and the cuteness of small devices like Tamagotchi. We wanted a project that combines the two, which is why the free wili seemed like a great system to use."}),"\n",(0,n.jsx)(t.h2,{id:"what-it-does",children:"What it does"}),"\n",(0,n.jsx)(t.p,{children:"Gives users the ability to play four 1v1 games"}),"\n",(0,n.jsxs)(t.ol,{children:["\n",(0,n.jsx)(t.li,{children:"Mashing game - Who can rack up the highest number of button presses before time runs out?"}),"\n",(0,n.jsx)(t.li,{children:"Memory game - A pattern sequence, up to 3 levels of increasing difficulty. Test your memory!"}),"\n",(0,n.jsx)(t.li,{children:"Counting game - Keep track of your color light and how many times it flashes. Don't blink."}),"\n",(0,n.jsx)(t.li,{children:"Reaction game - Who can react faster? Click the color that shows up as quick as you can."}),"\n"]}),"\n",(0,n.jsx)(t.p,{children:"The lights at the end of a game blink red if P1 has won and green if P2 (yellow if tie)."}),"\n",(0,n.jsx)(t.h2,{id:"how-we-built-it",children:"How we built it"}),"\n",(0,n.jsx)(t.p,{children:"We used two Python libraries. The FreeWheel API to communicate with the FREE-WILi and flash our code, and the pygame library to receive and read controller input. We also have a given header file for C++ definitions of useful functions that allow us to configure the FREE-WILi board, such as LED toggles and Display images."}),"\n",(0,n.jsx)(t.h2,{id:"challenges-we-ran-into",children:"Challenges we ran into"}),"\n",(0,n.jsx)(t.p,{children:"The FREE-WILi had some hardware limitations that prevented us from fully fledging out our implementation as was planned. Primarily, its I/O capabilities are limited, and cannot read controller input through USB-C as a general purpose computer can, so we had to keep the system wired to the computer during play. We also ran into space issues in uploading images to the display, so the UI is not as in depth as we would have liked."}),"\n",(0,n.jsx)(t.h2,{id:"accomplishments-that-were-proud-of",children:"Accomplishments that we're proud of"}),"\n",(0,n.jsx)(t.p,{children:"For having found out about this device only 24 hours before submission, we are very proud of the fact that we were able to flash the device with our software, turn on LEDs, upload images, and have it function properly with our controller input, despite the limitations we encountered."}),"\n",(0,n.jsx)(t.h2,{id:"what-we-learned",children:"What we learned"}),"\n",(0,n.jsx)(t.p,{children:"We learned a lot about how FREE-WILi works, how to write to it, and its functionalities. We also learned how to use pygame to process user inputs from a controller, to parse and control them correctly, and also how to manage multiple controllers."}),"\n",(0,n.jsx)(t.h2,{id:"whats-next-for-wili-party",children:"What's next for Wili-Party"}),"\n",(0,n.jsx)(t.p,{children:"Ideally, we would love to make the controller input work without running it through a computer for processing. We want the games to be able to be fully run on the FREE-WILi itself, with just two controllers as support. We would also like to make the communication wireless, so we are not cluttered with USB-C cables while playing."}),"\n",(0,n.jsx)(t.h3,{id:"built-with",children:"Built With"}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.code,{children:"c++"})," ",(0,n.jsx)(t.code,{children:"freewili"})," ",(0,n.jsx)(t.code,{children:"pygame"})," ",(0,n.jsx)(t.code,{children:"python"})," ",(0,n.jsx)(t.code,{children:"time"})]}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.em,{children:"Source"})," - ",(0,n.jsx)(t.a,{href:"https://devpost.com/software/wili-party",children:"https://devpost.com/software/wili-party"})]})]})}function u(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},9948:(e,t,i)=>{i.d(t,{A:()=>n});i(6540);var a=i(4848);const n=({videoId:e})=>(0,a.jsx)("iframe",{width:"100%",height:"515",src:`https://www.youtube.com/embed/${e}`,frameborder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture",allowfullscreen:!0})}}]);