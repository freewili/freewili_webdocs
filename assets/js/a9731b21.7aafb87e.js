"use strict";(self.webpackChunkfreewili_docs=self.webpackChunkfreewili_docs||[]).push([[7973],{4239:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>d,default:()=>x,frontMatter:()=>l,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"io-app/main-menu-commands","title":"FREE-WILi Main Menu Commands - IO Control, SPI, I2C, UART, FPGA, and Scripting","description":"Discover the FREE-WILi main menu commands for controlling IO, generating PWM, reading/writing SPI and I2C, managing UART, and handling FPGA and script operations. Learn about each command\'s functionality and arguments","source":"@site/docs/io-app/main-menu-commands.md","sourceDirName":"io-app","slug":"/io-app/main-menu-commands","permalink":"/io-app/main-menu-commands","draft":false,"unlisted":false,"editUrl":"https://github.com/freewili/FreeWili_WebDocs/blob/main/docs/io-app/main-menu-commands.md","tags":[],"version":"current","lastUpdatedAt":1724134738000,"sidebarPosition":2,"frontMatter":{"title":"FREE-WILi Main Menu Commands - IO Control, SPI, I2C, UART, FPGA, and Scripting","description":"Discover the FREE-WILi main menu commands for controlling IO, generating PWM, reading/writing SPI and I2C, managing UART, and handling FPGA and script operations. Learn about each command\'s functionality and arguments","keywords":["FREE-WILi main menu commands","GPIO control","PWM generation","SPI read/write","I2C communication","UART streaming","FPGA loading","script execution","FREE-WILi commands overview"],"sidebar_position":2,"sidebar_label":"Main Menu Commands"},"sidebar":"tutorialSidebar","previous":{"title":"Main Menu Header","permalink":"/io-app/main-menu-header"},"next":{"title":"Host USB Serial API","permalink":"/io-app/host-usb-serial-api"}}');var s=n(4848),r=n(8453);const l={title:"FREE-WILi Main Menu Commands - IO Control, SPI, I2C, UART, FPGA, and Scripting",description:"Discover the FREE-WILi main menu commands for controlling IO, generating PWM, reading/writing SPI and I2C, managing UART, and handling FPGA and script operations. Learn about each command's functionality and arguments",keywords:["FREE-WILi main menu commands","GPIO control","PWM generation","SPI read/write","I2C communication","UART streaming","FPGA loading","script execution","FREE-WILi commands overview"],sidebar_position:2,sidebar_label:"Main Menu Commands"},d="Main Menu Commands",c={},a=[];function o(e){const t={h1:"h1",header:"header",img:"img",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"main-menu-commands",children:"Main Menu Commands"})}),"\n",(0,s.jsx)(t.p,{children:"Commands are a single letter. After you enter the letter additonal information is entered. The following command are available from the main menu:"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"center"},children:(0,s.jsx)(t.strong,{children:"Command"})}),(0,s.jsx)(t.th,{style:{textAlign:"center"},children:(0,s.jsx)(t.strong,{children:"Description"})}),(0,s.jsx)(t.th,{style:{textAlign:"center"},children:(0,s.jsx)(t.strong,{children:"Arguments"})}),(0,s.jsx)(t.th,{style:{textAlign:"center"},children:(0,s.jsx)(t.strong,{children:"Notes"})})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"h"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"set io high"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"gpio number"}),(0,s.jsx)(t.td,{style:{textAlign:"center"}})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"l"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"set io low"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"gpio number"}),(0,s.jsx)(t.td,{style:{textAlign:"center"}})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"o"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"generate pwm"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"gpio number, frequency, and duty cycle"}),(0,s.jsx)(t.td,{style:{textAlign:"center"}})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"g"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"get all io"}),(0,s.jsx)(t.td,{style:{textAlign:"center"}}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"Returns the state of all 32 IO of the FREE-WILi processor in hex"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"s"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"read/write spi"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"the spi write bytes"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"Returns the read bytes in hex"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"t"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"write radio"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"the radio index, and data in hex"}),(0,s.jsx)(t.td,{style:{textAlign:"center"}})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"k"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"read radio"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"the radio index and count of read"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"Returns the data read"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"i"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"write i2c"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"device address, register, and additional write bytes"}),(0,s.jsx)(t.td,{style:{textAlign:"center"}})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"r"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"read i2c"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"device address, register and read length"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"Returns the data read"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"p"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"poll i2c"}),(0,s.jsx)(t.td,{style:{textAlign:"center"}}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"Returns a table of i2c address that responded to a read"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"u"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"write uart"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"write bytes in hex"}),(0,s.jsx)(t.td,{style:{textAlign:"center"}})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"y"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"stream uart"}),(0,s.jsx)(t.td,{style:{textAlign:"center"}}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"toggles on and off of sending uart data to host"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"w"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"run script"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"name of script in file system"}),(0,s.jsx)(t.td,{style:{textAlign:"center"}})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"m"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"load fpga from file"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"name of fpga bit file in file systems"}),(0,s.jsx)(t.td,{style:{textAlign:"center"}})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"d"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"download fpga"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"fpga bit file bytes"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"send raw FPGA bits after this command. This has a 10 second timeout."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"x"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"files"}),(0,s.jsx)(t.td,{style:{textAlign:"center"}}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"Access the files menu"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"z"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"settings"}),(0,s.jsx)(t.td,{style:{textAlign:"center"}}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"Access the settings menu"})]})]})]}),"\n",(0,s.jsx)("div",{class:"text--center",children:(0,s.jsx)("figure",{children:(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.img,{alt:"Main Menu",src:n(5482).A+"",title:"Main Menu",width:"657",height:"1212"}),"\n",(0,s.jsx)("figcaption",{children:"The Main Menu access the core FREE-WILi Features."})]})})})]})}function x(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(o,{...e})}):o(e)}},5482:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/main-menu-f677926c61eae3d5ecf5a2276ff43029.png"},8453:(e,t,n)=>{n.d(t,{R:()=>l,x:()=>d});var i=n(6540);const s={},r=i.createContext(s);function l(e){const t=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),i.createElement(r.Provider,{value:t},e.children)}}}]);