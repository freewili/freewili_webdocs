"use strict";(self.webpackChunkfreewili_docs=self.webpackChunkfreewili_docs||[]).push([[9579],{8453:(n,e,i)=>{i.d(e,{R:()=>t,x:()=>l});var r=i(6540);const o={},s=r.createContext(o);function t(n){const e=r.useContext(s);return r.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function l(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(o):n.components||o:t(n.components),r.createElement(s.Provider,{value:e},n.children)}},9880:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>a,contentTitle:()=>l,default:()=>u,frontMatter:()=>t,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"gpio/gpio-protocols","title":"FREE-WILi GPIO Protocol Configuration: SPI, I2C, and UART Setup","description":"Complete configuration guide for SPI, I2C, and UART protocols on FREE-WILi GPIO pins. Includes frequency settings, parameters, pin assignments, and concurrent operation details.","source":"@site/docs/gpio/gpio-protocols.md","sourceDirName":"gpio","slug":"/gpio/gpio-protocols","permalink":"/gpio/gpio-protocols","draft":false,"unlisted":false,"editUrl":"https://github.com/freewili/FreeWili_WebDocs/blob/main/docs/gpio/gpio-protocols.md","tags":[],"version":"current","lastUpdatedAt":1758897739000,"sidebarPosition":2,"frontMatter":{"title":"FREE-WILi GPIO Protocol Configuration: SPI, I2C, and UART Setup","description":"Complete configuration guide for SPI, I2C, and UART protocols on FREE-WILi GPIO pins. Includes frequency settings, parameters, pin assignments, and concurrent operation details.","keywords":["FREE-WILi protocols","SPI configuration","I2C setup","UART parameters","protocol settings","frequency configuration","concurrent protocols","digital communication"],"sidebar_position":2,"sidebar_label":"Protocol Configuration"},"sidebar":"tutorialSidebar","previous":{"title":"Pinout & Electrical","permalink":"/gpio/gpio-pinout"},"next":{"title":"Troubleshooting","permalink":"/gpio/gpio-troubleshooting"}}');var o=i(4848),s=i(8453);const t={title:"FREE-WILi GPIO Protocol Configuration: SPI, I2C, and UART Setup",description:"Complete configuration guide for SPI, I2C, and UART protocols on FREE-WILi GPIO pins. Includes frequency settings, parameters, pin assignments, and concurrent operation details.",keywords:["FREE-WILi protocols","SPI configuration","I2C setup","UART parameters","protocol settings","frequency configuration","concurrent protocols","digital communication"],sidebar_position:2,sidebar_label:"Protocol Configuration"},l="GPIO Protocol Configuration",a={},c=[{value:"Overview",id:"overview",level:2},{value:"SPI Configuration",id:"spi-configuration",level:2},{value:"Pin Assignment",id:"pin-assignment",level:3},{value:"SPI Parameters",id:"spi-parameters",level:3},{value:"I2C Configuration",id:"i2c-configuration",level:2},{value:"Pin Assignment",id:"pin-assignment-1",level:3},{value:"I2C Parameters",id:"i2c-parameters",level:3},{value:"UART Configuration",id:"uart-configuration",level:2},{value:"Pin Assignment",id:"pin-assignment-2",level:3},{value:"UART Parameters",id:"uart-parameters",level:3},{value:"Protocol Interaction",id:"protocol-interaction",level:2},{value:"Concurrent Protocol Operation",id:"concurrent-protocol-operation",level:3},{value:"Configuration Examples",id:"configuration-examples",level:2},{value:"High-Speed SPI Setup",id:"high-speed-spi-setup",level:3},{value:"Fast I2C Configuration",id:"fast-i2c-configuration",level:3},{value:"High Baud Rate UART",id:"high-baud-rate-uart",level:3}];function d(n){const e={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...n.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.header,{children:(0,o.jsx)(e.h1,{id:"gpio-protocol-configuration",children:"GPIO Protocol Configuration"})}),"\n",(0,o.jsx)(e.h2,{id:"overview",children:"Overview"}),"\n",(0,o.jsxs)(e.p,{children:["FREE-WILi's GPIO header supports multiple digital communication protocols. Each protocol can be configured through the ",(0,o.jsx)(e.a,{href:"../../scripting/io-app/settings-menu/",children:"Settings Menu"})," and operates independently on dedicated pin sets."]}),"\n",(0,o.jsx)(e.h2,{id:"spi-configuration",children:"SPI Configuration"}),"\n",(0,o.jsx)(e.h3,{id:"pin-assignment",children:"Pin Assignment"}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"Pin 1"}),": Chip Select (CS) - Output"]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"Pin 12"}),": RX (MISO) - Input"]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"Pin 13"}),": TX (MOSI) - Output"]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"Pin 15"}),": SCLK - Output"]}),"\n"]}),"\n",(0,o.jsx)(e.h3,{id:"spi-parameters",children:"SPI Parameters"}),"\n",(0,o.jsx)(e.p,{children:(0,o.jsx)(e.strong,{children:"Frequency Configuration:"})}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"Range"}),": Up to 70 MHz"]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"Default"}),": 5 MHz"]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"Configuration"}),": Via settings menu"]}),"\n"]}),"\n",(0,o.jsx)(e.p,{children:(0,o.jsx)(e.strong,{children:"Clock Polarity and Phase:"})}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"CPOL"}),": Programmable clock polarity"]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"CPHA"}),": Programmable clock phase"]}),"\n"]}),"\n",(0,o.jsx)(e.h2,{id:"i2c-configuration",children:"I2C Configuration"}),"\n",(0,o.jsx)(e.h3,{id:"pin-assignment-1",children:"Pin Assignment"}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"Pin 8"}),": SCL (Clock) - Bidirectional"]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"Pin 10"}),": SDA (Data) - Bidirectional"]}),"\n"]}),"\n",(0,o.jsx)(e.h3,{id:"i2c-parameters",children:"I2C Parameters"}),"\n",(0,o.jsx)(e.p,{children:(0,o.jsx)(e.strong,{children:"Frequency Configuration:"})}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"Range"}),": Up to 1 MHz"]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"Default"}),": 100 kHz (Standard mode)"]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"Supported"}),": Standard (100 kHz), Fast (400 kHz), Fast+ (1 MHz)"]}),"\n"]}),"\n",(0,o.jsx)(e.p,{children:(0,o.jsx)(e.strong,{children:"Pull-up Resistors:"})}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"Built-in"}),": Software-controlled 10k\u03a9 pull-ups on PCA9517 buffer"]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"Control"}),": Enable/disable via settings menu"]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"Voltage"}),": Matches V PINS IN level"]}),"\n"]}),"\n",(0,o.jsx)(e.h2,{id:"uart-configuration",children:"UART Configuration"}),"\n",(0,o.jsx)(e.h3,{id:"pin-assignment-2",children:"Pin Assignment"}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"Pin 5"}),": RX (Receive) - Input"]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"Pin 7"}),": CTS (Clear To Send) - Input"]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"Pin 9"}),": TX (Transmit) - Output"]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"Pin 11"}),": RTS (Request To Send) - Output"]}),"\n"]}),"\n",(0,o.jsx)(e.h3,{id:"uart-parameters",children:"UART Parameters"}),"\n",(0,o.jsx)(e.p,{children:(0,o.jsx)(e.strong,{children:"Baud Rate:"})}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"Range"}),": Up to 8,000,000 bps"]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"Default"}),": 115,200 bps"]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"Configuration"}),": Programmable via settings menu"]}),"\n"]}),"\n",(0,o.jsx)(e.p,{children:(0,o.jsx)(e.strong,{children:"Data Format:"})}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"Data Bits"}),": 4-16 bits (default: 8)"]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"Parity"}),": None, Even, Odd (default: None)"]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"Stop Bits"}),": 1-2 (default: 1)"]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"Flow Control"}),": RTS/CTS handshaking available (default: disabled)"]}),"\n"]}),"\n",(0,o.jsxs)(e.p,{children:[(0,o.jsx)(e.strong,{children:"Full Duplex"}),": Simultaneous transmit and receive operations supported."]}),"\n",(0,o.jsx)(e.h2,{id:"protocol-interaction",children:"Protocol Interaction"}),"\n",(0,o.jsx)(e.h3,{id:"concurrent-protocol-operation",children:"Concurrent Protocol Operation"}),"\n",(0,o.jsx)(e.p,{children:(0,o.jsx)(e.strong,{children:"Supported Combinations:"})}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsx)(e.li,{children:"All three protocols (SPI, I2C, UART) can operate simultaneously"}),"\n",(0,o.jsx)(e.li,{children:"No hardware conflicts between protocols"}),"\n",(0,o.jsx)(e.li,{children:"Independent configuration and operation"}),"\n"]}),"\n",(0,o.jsx)(e.p,{children:(0,o.jsx)(e.strong,{children:"Shared Resources:"})}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsx)(e.li,{children:"All protocols share the same V PINS IN voltage level"}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.a,{href:"../../scripting/io-app/logic-analyzer/",children:"Logic analyzer"})," can monitor all protocols"]}),"\n"]}),"\n",(0,o.jsx)(e.h2,{id:"configuration-examples",children:"Configuration Examples"}),"\n",(0,o.jsx)(e.h3,{id:"high-speed-spi-setup",children:"High-Speed SPI Setup"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{children:"Settings Menu > SPI Configuration:\n- Frequency: 20 MHz\n- CPOL: 0 (Clock idle low)\n- CPHA: 0 (Sample on rising edge)\n"})}),"\n",(0,o.jsx)(e.h3,{id:"fast-i2c-configuration",children:"Fast I2C Configuration"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{children:"Settings Menu > I2C Configuration:\n- Frequency: 400 kHz (Fast mode)\n- Pull-ups: Enabled\n"})}),"\n",(0,o.jsx)(e.h3,{id:"high-baud-rate-uart",children:"High Baud Rate UART"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{children:"Settings Menu > UART Configuration:\n- Baud Rate: 2,000,000 bps\n- RTS Hand Shaking: Enabled\n- CTS Hand Shaking: Enabled\n- Data Bits: 8\n- Parity: None\n- Stop Bits: 1\n"})}),"\n",(0,o.jsx)(e.p,{children:"Related documentation:"}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:"../../scripting/io-app/settings-menu/",children:"Settings Menu Documentation"})}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.a,{href:"../../scripting/io-app/scripting-with-wasm/",children:"WASM Scripting"})," for automated protocol control"]}),"\n"]})]})}function u(n={}){const{wrapper:e}={...(0,s.R)(),...n.components};return e?(0,o.jsx)(e,{...n,children:(0,o.jsx)(d,{...n})}):d(n)}}}]);